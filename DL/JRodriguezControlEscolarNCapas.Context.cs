//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ControlEscolarEntities : DbContext
    {
        public ControlEscolarEntities()
            : base("name=ControlEscolarEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Alumno> Alumnos { get; set; }
        public virtual DbSet<Materia> Materias { get; set; }
    
        public virtual int ADDAlumno(string nombre, string apellidoMaterno, string apellidoPaterno)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADDAlumno", nombreParameter, apellidoMaternoParameter, apellidoPaternoParameter);
        }
    
        public virtual int DeleteAlumno(Nullable<int> idAlumno)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("idAlumno", idAlumno) :
                new ObjectParameter("idAlumno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAlumno", idAlumnoParameter);
        }
    
        public virtual ObjectResult<GetAllAlumno_Result> GetAllAlumno()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAlumno_Result>("GetAllAlumno");
        }
    
        public virtual ObjectResult<GetByIdAlumno_Result> GetByIdAlumno(Nullable<int> idAlumno)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("idAlumno", idAlumno) :
                new ObjectParameter("idAlumno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIdAlumno_Result>("GetByIdAlumno", idAlumnoParameter);
        }
    
        public virtual int UpdateAlumno(Nullable<int> idAlumno, string nombre, string apellidoPaterno, string apellidoMaterno)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("idAlumno", idAlumno) :
                new ObjectParameter("idAlumno", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAlumno", idAlumnoParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter);
        }
    
        public virtual int AddMateria(string nombre, Nullable<decimal> costo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("Costo", costo) :
                new ObjectParameter("Costo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMateria", nombreParameter, costoParameter);
        }
    
        public virtual int DeleteMateria(Nullable<int> idMateria)
        {
            var idMateriaParameter = idMateria.HasValue ?
                new ObjectParameter("idMateria", idMateria) :
                new ObjectParameter("idMateria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMateria", idMateriaParameter);
        }
    
        public virtual ObjectResult<GetAllMaterias_Result> GetAllMaterias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllMaterias_Result>("GetAllMaterias");
        }
    
        public virtual ObjectResult<MateriaGetById_Result> MateriaGetById(Nullable<int> idMateria)
        {
            var idMateriaParameter = idMateria.HasValue ?
                new ObjectParameter("idMateria", idMateria) :
                new ObjectParameter("idMateria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MateriaGetById_Result>("MateriaGetById", idMateriaParameter);
        }
    
        public virtual int UpdateMateria(Nullable<int> idMateria, string nombre, Nullable<decimal> costo)
        {
            var idMateriaParameter = idMateria.HasValue ?
                new ObjectParameter("idMateria", idMateria) :
                new ObjectParameter("idMateria", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("Costo", costo) :
                new ObjectParameter("Costo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMateria", idMateriaParameter, nombreParameter, costoParameter);
        }
    
        public virtual ObjectResult<MateriasAsignadasGetByIdAlumno_Result> MateriasAsignadasGetByIdAlumno(Nullable<int> idAlumno)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("idAlumno", idAlumno) :
                new ObjectParameter("idAlumno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MateriasAsignadasGetByIdAlumno_Result>("MateriasAsignadasGetByIdAlumno", idAlumnoParameter);
        }
    
        public virtual int DeleteMateriaAsignada(Nullable<int> idMateria)
        {
            var idMateriaParameter = idMateria.HasValue ?
                new ObjectParameter("idMateria", idMateria) :
                new ObjectParameter("idMateria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMateriaAsignada", idMateriaParameter);
        }
    
        public virtual ObjectResult<MateriasNoAsignadasByIdAlumno_Result> MateriasNoAsignadasByIdAlumno(Nullable<int> idAlumno)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("idAlumno", idAlumno) :
                new ObjectParameter("idAlumno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MateriasNoAsignadasByIdAlumno_Result>("MateriasNoAsignadasByIdAlumno", idAlumnoParameter);
        }
    
        public virtual int addMateriasByIdAlumno(Nullable<int> idAlumno, Nullable<int> idMateria)
        {
            var idAlumnoParameter = idAlumno.HasValue ?
                new ObjectParameter("idAlumno", idAlumno) :
                new ObjectParameter("idAlumno", typeof(int));
    
            var idMateriaParameter = idMateria.HasValue ?
                new ObjectParameter("idMateria", idMateria) :
                new ObjectParameter("idMateria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addMateriasByIdAlumno", idAlumnoParameter, idMateriaParameter);
        }
    }
}
